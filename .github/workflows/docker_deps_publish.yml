name: Build & Publish Cyclus-deps docker image

on:
  # allows us to run workflows manually
  workflow_dispatch:
  push:
    paths:
      - 'docker/cyclus-deps/Dockerfile'
      - '.github/workflows/docker_deps_publish.yml'

      
jobs:
  build-deps-img:
    runs-on: ubuntu-latest
    name: Cyclus deps

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and Export Cyclus-deps
        uses: docker/build-push-action@v2
        with:
          file: docker/cyclus-deps/Dockerfile
          push: true
          context: .
          build-args: |
            UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
          tags: ghcr.io/${{ github.repository_owner }}/cyclus_deps:ci_testing
      
  test_img:
    needs: [build-deps-img]
    runs-on: ubuntu-latest 

    container:
      image: ghcr.io/${{ github.repository_owner }}/cyclus_deps:ci_testing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: setup
        run: |
          echo "HOME=/github/home/" >> $GITHUB_ENV
          echo "PATH=$PATH:${HOME}/.local/bin" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${HOME}/.local/lib" >> $GITHUB_ENV
  
      - name: Building Cyclus
        run: |
          mkdir -p ${HOME}/.local/lib/python3.7/site-packages/
          cd ${GITHUB_WORKSPACE}
          python install.py -j 2 \
                            --build-type=Release --core-version 999999.999999 \
                            -DBLAS_LIBRARIES="/opt/conda/lib/libblas.so" \
                            -DLAPACK_LIBRARIES="/opt/conda/lib/liblapack.so"

      - name: Unit Test
        run: |
          cyclus_unit_tests; exit $?
      
      - name: Nosetest
        run: |
          nosetests -w ${GITHUB_WORKSPACE}/tests; exit $?

  pushing_test_stable_img:
    if: ${{ github.repository_owner == 'svalinn' }}
    needs: [test_img]
    runs-on: ubuntu-latest

    name: ghcr.io/${{ github.repository_owner }}/cyclus_deps':' ci-testing -> latest/stable

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Image as stable img
        uses: akhilerm/tag-push-action@v1.0.0
        with:
          src: ghcr.io/${{ github.repository_owner }}/cyclus_deps:ci_testing
          dst: ghcr.io/${{ github.repository_owner }}/cyclus_deps:stable

      - name: Push Image as latest img
        uses: akhilerm/tag-push-action@v1.0.0
        with:
          src: ghcr.io/${{ github.repository_owner }}/cyclus_deps:ci_testing
          dst: ghcr.io/${{ github.repository_owner }}/cyclus_deps:latest